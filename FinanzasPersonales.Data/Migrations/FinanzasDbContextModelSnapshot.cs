// <auto-generated />
using System;
using FinanzasPersonales.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanzasPersonales.Data.Migrations
{
    [DbContext(typeof(FinanzasDbContext))]
    partial class FinanzasDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinanzasPersonales.Api.Modelos.MovimientoProgramado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AfectarAId")
                        .HasColumnType("int");

                    b.Property<int>("CantidadPeriodos")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Periodicidad")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AfectarAId");

                    b.ToTable("MovimientosProgramados");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Modelos.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoId")
                        .IsUnique();

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Modelos.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsIngreso")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tipos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EsIngreso = true,
                            Nombre = "Efectivo"
                        },
                        new
                        {
                            Id = 2,
                            EsIngreso = true,
                            Nombre = "Cuenta Debito"
                        },
                        new
                        {
                            Id = 3,
                            EsIngreso = false,
                            Nombre = "Cuenta Creadito"
                        },
                        new
                        {
                            Id = 4,
                            EsIngreso = true,
                            Nombre = "Inversion"
                        });
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Modelos.Transaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CuentaId");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("FinanzasPersonales.Api.Modelos.MovimientoProgramado", b =>
                {
                    b.HasOne("FinanzasPersonales.Core.Modelos.Cuenta", "AfectarA")
                        .WithMany()
                        .HasForeignKey("AfectarAId");

                    b.Navigation("AfectarA");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Modelos.Cuenta", b =>
                {
                    b.HasOne("FinanzasPersonales.Core.Modelos.Tipo", "Tipo")
                        .WithOne()
                        .HasForeignKey("FinanzasPersonales.Core.Modelos.Cuenta", "TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Modelos.Transaccion", b =>
                {
                    b.HasOne("FinanzasPersonales.Core.Modelos.Cuenta", "Cuenta")
                        .WithMany("Transacciones")
                        .HasForeignKey("CuentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuenta");
                });

            modelBuilder.Entity("FinanzasPersonales.Core.Modelos.Cuenta", b =>
                {
                    b.Navigation("Transacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
